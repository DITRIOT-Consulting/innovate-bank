podTemplate(label: 'buildpod',
    volumes: [
        hostPathVolume(hostPath: '/etc/docker/certs.d', mountPath: '/etc/docker/certs.d'),
        hostPathVolume(hostPath: '/var/run/docker.sock', mountPath: '/var/run/docker.sock'),
        secretVolume(secretName: 'defregistrykey', mountPath: '/var/run/secrets/registry-account'),
        configMapVolume(configMapName: 'def-registry-config', mountPath: '/var/run/configs/registry-config')
    ],
    imagePullSecrets:['defregistrykey'],
    containers: [
        containerTemplate(name: 'kubectl', image: 'lachlanevenson/k8s-kubectl:latest', command: 'cat', ttyEnabled: true),
        containerTemplate(name: 'helm', image: 'lachlanevenson/k8s-helm:latest', command: 'cat', ttyEnabled: true),
        containerTemplate(name: 'docker', image: 'mycluster.icp:8500/default/docker:latest', command: 'cat', ttyEnabled: true, imagePullSecrets:['defregistrykey'],alwaysPullImage: true),
]) 
{

    node('buildpod') {
        checkout scm     
        container('docker') {
            stage('Build Docker Image') {
                sh """
                #!/bin/bash
                NAMESPACE='default'
                REGISTRY='mycluster.icp:8500'
                docker build -t \${REGISTRY}/\${NAMESPACE}/accounts:${env.BUILD_NUMBER} accounts/
                """
            } 
            stage('Push Docker Image to Registry') {
                sh """
                #!/bin/bash
                NAMESPACE='default'
                REGISTRY='mycluster.icp:8500'
                set +x
                DOCKER_USER='admin'
                DOCKER_PASSWORD='admin'
                docker login -u=\${DOCKER_USER} -p=\${DOCKER_PASSWORD} \${REGISTRY}
                set -x
                docker push \${REGISTRY}/\${NAMESPACE}/accounts:${env.BUILD_NUMBER}
                """
            }
        }
        
        container('helm') {                                   
            stage('Deploy new helm release') {                                      
                sh """                                       
                #!/bin/bash                                       
                set +e                                       
                NAMESPACE=`cat /var/run/configs/registry-config/namespace`                         
                REGISTRY=`cat /var/run/configs/registry-config/registry`                         
                CHARTNAME=`helm list --deployed --short accounts`                                 
                helm list \${CHARTNAME}                                           
                if [ \${?} -ne "0" ]; then                                        
                # No chart release to update                                       
                helm create ./accounts/chart/innovate-accounts/
                fi                                                              
                # Update Release                                        
                helm upgrade accounts ./accounts/chart/innovate-accounts/ 
                --set image.repository=\${REGISTRY}/\${NAMESPACE}/accounts
                --set image.tag=${env.BUILD_NUMBER}                          
                """
                                             }
        
           } 
             
}
